openapi: 3.0.1
info:
  title: API Control Plane Users Management Service
  description: |
    ## Overview

    User management API allows you to manage the following entities
      - Users
      - Groups

    *A user with the **API Administrator** functional privilege can manage the
    Users, Groups in Ingress and UMC.*


    ## Supported functionalities 
    
    User Management API supports the following functionalities for:

                                 
    ### Users
      1. List all the users in the system.
      2. Create a new user.
      3. Retrieve a user with a specific ID.
      4. Update a user with a specific ID.
      5. Delete a user with a specific ID.
      6. Assign groups to a user.
      7. Retrieve the user's own account details.
      8. Retrieve preferences of current user. 
      9. Update preferences for current user.
    

    ### Groups
      1. List all the groups in the system.
  version: '10.15'
servers:
 - url: "{protocol}://{hostname}:{port}/api/ingress/v1"
   description: This is the endpoint where the Ingress API is accessible from the server.
   variables:
    protocol:
      default: https
      enum:
      - http
      - https
      description: The protocol supported by the server - HTTP or HTTPS. Default is HTTPS.
    hostname:
      default: localhost
      description: The domain name of the server where the API is hosted. The hostname must be resolvable by the DNS lookup.
    port:
      default: "443"
      description: The port number where the REST API is running on the server. The default port for HTTPS is 443 and HTTP is 80 but it can also be any valid port.  
paths:
  /users:
    get:
      summary: Listing all the users in the system.
      description: |
        This method lists all the available users in the system for the specified page
        number.

        **Restriction**: No restrictions
      tags:
        - Users
      parameters:
        - name: page
          in: query
          description: |-
            Defines the page number to be retrieved for the collection. 

            If the value is not specified, the default value is assumed as 1. 

            By default, collection responses are paginated in batches of 20.
            
            A successful GET call returns the default page number, that is 1, and any invalid value, such as ["five," -345], is ignored.
          required: false
          schema:
            type: integer
            example: 1
        - name: size
          in: query
          description: |
            Defines the number of results to be fetched for the current page. 

            If the value is not specified, the default value of 20 configured in the system settings is used.
            
            A successful GET call returns any invalid value, such as ["five," -345], is ignored.
          required: false
          schema:
            type: integer
            example: 5
      responses:
        '200':
          description: This status code indicates the successful retrieval of users available in the system.
          content:
            application/json:
              schema:
                description: Collection of Users in the response
                type: object
                properties:
                  result:
                    description: Collection of users
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  count:
                    description: Total number of users available
                    type: integer
              examples:
                UsersListing:
                  description: User object to list the users.
                  value:
                    result:
                      - id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                        username: administrator
                        type: SSO
                        description: admin worker
                        firstname: Administrator
                        lastname: System
                        email: administrator@sag.com
                        preferredLocale: en
                        groups:
                          - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                          - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                        created: 2021-03-24 08:15:23.345 IST
                        modified: 2021-03-24 09:15:23.345 IST
                      - id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca5555
                        username: superadmin
                        type: SSO
                        description: super admin worker
                        firstname: Super
                        lastname: Admin
                        email: superadmin@sag.com
                        preferredLocale: en
                        groups:
                          - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                        created: 2021-03-24 08:15:23.345 IST
                        modified: 2021-03-24 08:15:23.345 IST
                    count: 2
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/internal_server_error'
    post:
      summary: Create a new user
      description: |-
        This method allows you to create a new user in Ingress with basic information.

        **Restriction**: Access is restricted to **authorised** individuals.
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              User:
                description: Request object for the user creation.
                value:
                  username: administrator
                  description: admin worker
                  firstname: Administrator
                  lastname: System
                  password: my#1234@Password
                  email: administrator@sag.com
                  preferredLocale: en
      responses:
        '201':
          description: User Created. Response for new user creation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                User:
                  description: User object for the response
                  value:
                    id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                    username: administrator
                    type: SSO
                    description: admin worker
                    firstname: Administrator
                    lastname: System
                    email: administrator@sag.com
                    preferredLocale: en
                    groups:
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                    created: 2021-03-24 08:15:23.345 IST
                    modified: 2021-03-24 08:15:23.345 IST
        '400':
          description: This status code indicates that the request body is bad
          content:
            application/json:
              examples:
                Invalid Json:
                  description: This status code indicates that the request body is bad
                User Mandatory:
                  description: This will be sent when the passed Json is not having the **username** as one of the parameter.
                  value:
                    errorDetails:
                      - 'Value ''Null'' is not allowed [PARAMETER: User name].'
                User Already Exists:
                  description: This will be sent when the passed Json is having a **username** which is already available in the system.
                  value:
                    errorDetails:
                      - The user already exists.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/internal_server_error'
  /users/{id}:
    parameters:
      - name: id
        in: path
        description: Unique identification for a user. Refers to the UUID of the user.
        required: true
        allowEmptyValue: false
        schema:
          type: string
          format: uuid
          example: 579e5c32-ccb8-35a3-b68f-6ec0ed730fc9
    get:
      summary: Retrieve a specific user identified by the given UUID.
      description: This method retrieves the specified user details using the unique identifier (UUID).
      tags:
        - Users
      responses:
        '200':
          description: Response when User retrieved successfully for the given UUID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                User:
                  description: User object for the response
                  value:
                    id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                    username: administrator
                    type: SSO
                    description: admin worker
                    firstname: Administrator
                    lastname: System
                    email: administrator@sag.com
                    preferredLocale: en
                    groups:
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                    created: 2021-03-24 08:15:23.345 IST
                    modified: 2021-03-24 08:15:23.345 IST
        '400':
          description: This status code indicates that the request is bad
          content:
            application/json:
              examples:
                Invalid User:
                  description: This status code indicates that the request Object id is bad
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: This status code indicates that the request object is not found
          content:
            application/json:
              examples:
                User Not Found:
                  description: This will be sent when the user is not found for the passed user id.
                  value:
                    errorDetails:
                      - '[USER] : Not Found for ''e1fbc814-9c78-3035-b5e1-08f859f6c6e1'''
        '500':
          $ref: '#/components/responses/internal_server_error'
    put:
      summary: Update a specific user identified by given UUID
      description: |
        This method updates a specific user's basic information, such as "first name", "last name", "email", so on, for a given UUID.

         **Restriction**: Access is restricted to **authorised** individuals.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              User:
                description: Request object for the user update.
                value:
                  description: admin worker
                  firstname: Administrator
                  lastname: System
                  email: administrator.new@sag.com
                  preferredLocale: en
      responses:
        '200':
          description: Response when User updated successfully for the given UUID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                User:
                  description: User object for the response
                  value:
                    id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                    username: administrator
                    type: SSO
                    description: admin worker
                    firstname: Administrator
                    lastname: System
                    email: administrator@sag.com
                    preferredLocale: en
                    groups:
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                    created: 2021-03-24 08:15:23.345 IST
                    modified: 2021-03-24 08:15:23.345 IST
        '400':
          description: This status code indicates that the request is bad
          content:
            application/json:
              examples:
                Invalid User:
                  description: This status code indicates that the request Object id is bad
                Invalid Json:
                  description: This status code indicates that the request body is bad
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: This status code indicates that the request object is not found
          content:
            application/json:
              examples:
                User Not Found:
                  description: This will be sent when the user is not found for the passed user id.
                  value:
                    errorDetails:
                      - '[USER] : Not Found for ''e1fbc814-9c78-3035-b5e1-08f859f6c6e1'''
        '500':
          $ref: '#/components/responses/internal_server_error'
    delete:
      summary: Delete user
      description: |
        This method deletes the specific user information identified by the unique identifier (UUID). If this method is called by the logged-in user with the logged-in user, then error message will be thrown.
      
        **Restriction**: Access is restricted to **authorised** individuals.
      tags:
        - Users
      responses:
        '204':
          description: Response when User deleted successfully.
        '400':
          description: This status code indicates that the request is bad
          content:
            application/json:
              examples:
                Invalid User:
                  description: This status code indicates that the request Object id is bad
                Cannot delete logged in User:
                  description: This will be sent when we try to delete the user who is already logged in.
                  value:
                    errorDetails:
                      - The user is logged in.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: This status code indicates that the request object is not found
          content:
            application/json:
              examples:
                User Not Found:
                  description: This will be sent when the user is not found for the passed user id.
                  value:
                    errorDetails:
                      - '[USER] : Not Found for ''e1fbc814-9c78-3035-b5e1-08f859f6c6e1'''
        '500':
          $ref: '#/components/responses/internal_server_error'
  /users/self:
    get:
      description: |
        This method retrieves the details of the currently logged-in user.

        *The endpoint is accessible to **ALL** the registered users.*
      summary: Retrieve logged-in user details.
      tags:
        - Users
      responses:
        '200':
          description: Response when user details are retrieved for the logged in user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                User:
                  description: User object for the response
                  value:
                    id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                    username: administrator
                    type: SSO
                    firstname: Administrator
                    lastname: System
                    email: administrator@sag.com
                    preferredLocale: en
                    timeZone: GMT (GMT+0:00)
                    timeFormat: hh:mm:ss a
                    dateFormat: MMM d, y,
                    groups:
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                    createdDate: 2021-03-24 08:15:23.345 IST
                    modifiedDate: 2021-03-24 08:15:23.345 IST
                    systemUser: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/internal_server_error'

  /users/self/extended:
    get:
      description: |
        This method retrieves the extended details of the currently logged-in user. The details retrieved by this endpoint is similar to users/self but the extended details include a few extra fields like trackUsage, cloudUser and subscribedProducts.

        *The endpoint is accessible to **ALL** the registered users.*
      summary: Retrieve extended details of logged-in user.
      tags:
        - Users
      responses:
        '200':
          description: Response when user details are retrieved for the logged in user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                User:
                  description: User object for the response
                  value:
                    id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                    username: administrator
                    type: SSO
                    firstname: Administrator
                    lastname: System
                    email: administrator@sag.com
                    preferredLocale: en
                    timeZone: GMT (GMT+0:00)
                    timeFormat: hh:mm:ss a
                    dateFormat: MMM d, y,
                    groups:
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                    createdDate: 2021-03-24 08:15:23.345 IST
                    modifiedDate: 2021-03-24 08:15:23.345 IST
                    subscribedProducts: []
                    trackUsage: true
                    cloudUser: true
                    systemUser: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/internal_server_error'

  /users/self/preferences/{prefType}:
    parameters:
      - name: prefType
        in: path
        description: To specify the type of user preference.
        required: true
        allowEmptyValue: false
        schema:
          type: string
          enum:
            - displaySetting
            - thresholdSetting
            - dateTimeSetting
            - dataplanePreferences
            - runtimePreferences
            - runtimeAPIPreferences
            - apiPreferences
            - usersListingPreferences
    get:
      description: |
        This method retrieves all the user preferences of the currently logged-in user.

        *The endpoint is accessible to **ALL** the registered users.*
      summary: Retrieve logged-in user's preferences.
      tags:
        - Users
      responses:
        '200':
          description: Response when user preferences are retrieved for the logged in user.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dateTimeSetting'
                  - $ref: '#/components/schemas/thresholdSetting'
                  - $ref: '#/components/schemas/displaySetting'
                  - $ref: '#/components/schemas/dataplanePreferences'
                  - $ref: '#/components/schemas/runtimePreferences'
                  - $ref: '#/components/schemas/runtimeAPIPreferences'
                  - $ref: '#/components/schemas/apiPreferences'
                  - $ref: '#/components/schemas/usersListingPreferences'

              examples:
                UserPreference:
                  description: User object for the response
                  value:
                    dateTimeSetting:
                      timeZone: GMT (GMT+0:00)
                      timeFormat: hh:mm:ss a
                      dateFormat: MMM d, y,
                    thresholdSetting:
                      runtimeTrend:
                        upwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                        downwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                      apiTrend:
                        upwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                        downwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                      dataPlanePerformance:
                        latencyThreshold:
                          acceptableLimit: 30
                          warningLimit: 70
                          errorLimit: 100
                          unit: ms
                        errorRateThreshold:
                          acceptableLimit: 25
                          warningLimit: 25
                          errorLimit: 100
                          unit: "%"
                      runtimePerformance:
                        latencyThreshold:
                          acceptableLimit: 30
                          warningLimit: 70
                          errorLimit: 100
                          unit: ms
                        errorRateThreshold:
                          acceptableLimit: 25
                          warningLimit: 25
                          errorLimit: 100
                          unit: "%"
                    displaySetting:
                      topList: 5
                      ppDashboardWidgets:
                        worldMap: true
                        avgLatency: true
                        runtimeUpward: true
                        avgResponseTime: true
                        health: true
                        errorRate: true
                        apiDownward: true
                        capacity: true
                        recentActivity: true
                        problematicAssets: true
                        performance: true
                        noOfTransactions: true
                        apiUpward: true
                        runtimeDownward: true
                        statistics: true
                      pmDashboardWidgets:
                        recentActivity: true
                        worldMap: true
                        noOfTransactions: true
                        apiLeast: true
                        avgGatewayLatency: true
                        avgResponseTime: true
                        apiMost: true
                        problematicAPIs: true
                        apiDownward: true
                        apiUpward: true
                        statistics: true
                      runtimeWidgets:
                        noOfTransactions: true
                        responseTime: true
                        latency: true
                        problematicAPIs: true
                        availability: true
                        errorRate: true
                        statusPerfCap: true
                    dataplanePreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - icon
                        - name
                        - tags
                        - noOfRuntimes
                        - lastUpdated
                        - owner
                        - status
                    runtimePreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - icon
                        - name
                        - associatedDataplanes
                        - tags
                        - type
                        - deploymentType
                        - region
                        - lastModifiedDate
                        - status
                        - location
                        - owner
                    runtimeAPIPreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - name
                        - apiType
                        - displayVersion
                        - description
                        - tags
                        - lastModifiedDate
                        - apiStatus
                        - isPublished
                    apiPreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - apiType
                        - name
                        - noOfRuntimes
                        - noOfDifferences
                        - status
                        - isPublished
                      childSelectedColumns:
                        - runtimeName
                        - name
                        - displayVersion
                        - description
                        - noOfPolicies
                        - status
                        - isPublished
                        - tags
                        - lastModifiedDate
                    usersListingPreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - username
                        - firstname
                        - lastname
                        - email
                        - groups

        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/internal_server_error'

    put:
      description: |
        This method updates the user preferences of the currently logged-in based on the fields passed in request body.

        *The endpoint is accessible to **ALL** the registered users.*
      summary: Update logged-in user's preferences.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/dateTimeSetting'
                - $ref: '#/components/schemas/thresholdSetting'
                - $ref: '#/components/schemas/displaySetting'
                - $ref: '#/components/schemas/dataplanePreferences'
                - $ref: '#/components/schemas/runtimePreferences'
                - $ref: '#/components/schemas/runtimeAPIPreferences'
                - $ref: '#/components/schemas/apiPreferences'
                - $ref: '#/components/schemas/usersListingPreferences'
            examples:
              UserPreference:
                description: Request body should contain the fields that needs to be updated. In the above example, the upward trend property of runtime trend under threshold settings would be updated with values from request body.
                value:
                  thresholdSetting:
                    runtimeTrend:
                      upwardTrend:
                        transactionCount: 30
                        errorRate: 20
                        responseTime: 10
                        latency: 10
                        unit: "%"



      responses:
        '200':
          description: Response when user preferences are updated for the logged in user.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dateTimeSetting'
                  - $ref: '#/components/schemas/thresholdSetting'
                  - $ref: '#/components/schemas/displaySetting'
                  - $ref: '#/components/schemas/dataplanePreferences'
                  - $ref: '#/components/schemas/runtimePreferences'
                  - $ref: '#/components/schemas/runtimeAPIPreferences'
                  - $ref: '#/components/schemas/apiPreferences'
                  - $ref: '#/components/schemas/usersListingPreferences'

              examples:
                UserPreference:
                  description: User object for the response
                  value:
                    dateTimeSetting:
                      timeZone: GMT (GMT+0:00)
                      timeFormat: hh:mm:ss a
                      dateFormat: MMM d, y,
                    thresholdSetting:
                      runtimeTrend:
                        upwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                        downwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                      apiTrend:
                        upwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                        downwardTrend:
                          transactionCount: 10
                          errorRate: 10
                          responseTime: 10
                          latency: 10
                          unit: "%"
                      dataPlanePerformance:
                        latencyThreshold:
                          acceptableLimit: 30
                          warningLimit: 70
                          errorLimit: 100
                          unit: ms
                        errorRateThreshold:
                          acceptableLimit: 25
                          warningLimit: 25
                          errorLimit: 100
                          unit: "%"
                      runtimePerformance:
                        latencyThreshold:
                          acceptableLimit: 30
                          warningLimit: 70
                          errorLimit: 100
                          unit: ms
                        errorRateThreshold:
                          acceptableLimit: 25
                          warningLimit: 25
                          errorLimit: 100
                          unit: "%"
                    displaySetting:
                      topList: 5
                      ppDashboardWidgets:
                        worldMap: true
                        avgLatency: true
                        runtimeUpward: true
                        avgResponseTime: true
                        health: true
                        errorRate: true
                        apiDownward: true
                        capacity: true
                        recentActivity: true
                        problematicAssets: true
                        performance: true
                        noOfTransactions: true
                        apiUpward: true
                        runtimeDownward: true
                        statistics: true
                      pmDashboardWidgets:
                        recentActivity: true
                        worldMap: true
                        noOfTransactions: true
                        apiLeast: true
                        avgGatewayLatency: true
                        avgResponseTime: true
                        apiMost: true
                        problematicAPIs: true
                        apiDownward: true
                        apiUpward: true
                        statistics: true
                      runtimeWidgets:
                        noOfTransactions: true
                        responseTime: true
                        latency: true
                        problematicAPIs: true
                        availability: true
                        errorRate: true
                        statusPerfCap: true
                    dataplanePreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - icon
                        - name
                        - tags
                        - noOfRuntimes
                        - lastUpdated
                        - owner
                        - status
                    runtimePreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - icon
                        - name
                        - associatedDataplanes
                        - tags
                        - type
                        - deploymentType
                        - region
                        - lastModifiedDate
                        - status
                        - location
                        - owner
                    runtimeAPIPreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - name
                        - apiType
                        - displayVersion
                        - description
                        - tags
                        - lastModifiedDate
                        - apiStatus
                        - isPublished
                    apiPreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - apiType
                        - name
                        - noOfRuntimes
                        - noOfDifferences
                        - status
                        - isPublished
                      childSelectedColumns:
                        - runtimeName
                        - name
                        - displayVersion
                        - description
                        - noOfPolicies
                        - status
                        - isPublished
                        - tags
                        - lastModifiedDate
                    usersListingPreferences:
                      rowHeight: 48
                      itemsPerPage: 10
                      selectedColumns:
                        - username
                        - firstname
                        - lastname
                        - email
                        - groups
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/internal_server_error'


  /users/{id}/groups:
    parameters:
      - name: id
        in: path
        description: Unique identification for user. Refers to the UUID of the user.
        required: true
        allowEmptyValue: false
        schema:
          type: string
          format: uuid
          example: 579e5c32-ccb8-35a3-b68f-6ec0ed730fc9
    put:
      summary: Add the groups to a user.
      description: |
        This method adds the groups passed to the user identified by given UUID. 

        **Restriction**: Access is restricted to **authorised** individuals.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: Collection of UUIDs of groups
              items:
                type: string
                format: uuid
            example:
              - 90015098-3cd2-3fb0-9696-3f7d28e17f72
              - 90015098-3cd2-3fb0-9696-3f7d28e17777
      responses:
        '200':
          description: Response when User updated successfully for the given UUID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                User:
                  description: User object for the response
                  value:
                    id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                    username: administrator
                    type: SSO
                    description: admin worker
                    firstname: Administrator
                    lastname: System
                    email: administrator@sag.com
                    preferredLocale: en
                    groups:
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                      - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                    createdDate: 2021-03-24 08:15:23.345 IST
                    modifiedDate: 2021-03-24 08:15:23.345 IST
        '400':
          description: This status code indicates that the request is bad
          content:
            application/json:
              examples:
                Invalid User:
                  description: This status code indicates that the request Object id is bad
                Invalid Json:
                  description: This status code indicates that the request body is bad
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: This status code indicates that the request is bad
          content:
            application/json:
              examples:
                User Not Found:
                  description: This will be sent when the user is not found for the passed user id.
                  value:
                    errorDetails:
                      - '[USER] : Not Found for ''e1fbc814-9c78-3035-b5e1-08f859f6c6e1'''
                Group Not Found:
                  description: This will be sent when the group is not found for the passed group id.
                  value:
                    errorDetails:
                      - '[GROUP] : Not Found for ''1794f40d-6673-3b6d-b999-6d5908614fae'''
                User and Group Not Found:
                  description: This will be sent when the user and group are not found for the passed user id and group id(s).
                  value:
                    errorDetails:
                      - '[USER] : Not Found for ''e1fbc814-9c78-3035-b5e1-08f859f6c6e1'''
                      - '[GROUP] : Not Found for ''1794f40d-6673-3b6d-b999-6d5908614fae'''
        '500':
          $ref: '#/components/responses/internal_server_error'

  /users/audits:
    post:
      summary: Retrieve the audit logs of the users in the system.
      description: |-
        This method retrieves all the audit logs of the users in the system for the specified page number.

        **Restriction**: No restrictions
      tags:
        - Users
      parameters:
        - name: page
          in: query
          description: |-
            Optional parameter.

            Defines the page number to be retrieved for the collection.

             If the value is not specified, the default value is assumed as 0.

            By default, collection responses are paginated in batches of 10.
          required: false
          schema:
            type: integer
            example: 1
        - name: size
          in: query
          description: |
            Optional parameter.

            Defines the number of results to be fetched for the current page.

            If the value is not specified, the default value configured in the system settings is considered.
          required: false
          schema:
            type: integer
            example: 5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAudit'
            examples:
              User:
                description: Request object for the user Audit.
                value:
                  from: 1700544745000
                  to: 1788548785000
                  types: [LOGIN_SUCCESSFUL]
      responses:
        '200':
          description: User Audit log is fetched. Response for user audit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuditResponse'
              examples:
                User:
                  description: UserAudit object for the response
                  value:
                    id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                    username: administrator
                    eAuditEventType: LOGIN_SUCCESSFUL
                    eventTimestamp: 1700544745000

  /groups:
    get:
      summary: Retrieve the groups in the system.
      description: |
        This method retrieves all the available groups in the system for the specified page number.

        **Restriction**: No restrictions
      tags:
        - Groups
      parameters:
        - name: page
          in: query
          description: |-
            Optional parameter. 

            Defines the page number to be retrieved for the collection. 

             If the value is not specified, the default value is assumed as 0. 

            By default, collection responses are paginated in batches of 10.
          required: false
          schema:
            type: integer
            example: 1
        - name: size
          in: query
          description: |
            Optional parameter. 

            Defines the number of results to be fetched for the current page.  
            
            If the value is not specified, the default value configured in the system settings is considered.
          required: false
          schema:
            type: integer
            example: 5
      responses:
        '200':
          description: The status code indicates the successful retrieval of the groups available in the system.
          content:
            application/json:
              schema:
                description: Collection of Group in the response
                type: object
                properties:
                  result:
                    description: Collection of Groups
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                  count:
                    description: Total number of Groups available
                    type: integer
                    example: 3
              examples:
                GroupListing:
                  description: Group object to list the groups.
                  value:
                    result:
                      - id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
                        name: API_PM
                        description: API Product Manager
                        created: 2021-03-24 08:15:23.345 IST
                        modified: 2021-03-24 08:15:23.345 IST
                      - id: 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
                        name: API_AD
                        description: API Admin
                        created: 2021-03-24 08:35:23.345 IST
                        modified: 2021-03-24 08:35:23.345 IST
                    count: 2
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/internal_server_error'
components:
  schemas:
    User:
      description: The user definition for all the operations.
      type: object
      required:
        - username
        - password
      properties:
        id:
          description: Id of the user. The id will be created and assigned to the User at the time of User creation.
          type: string
          format: uuid
          readOnly: true
          example: 579e5c32-ccb8-35a3-b68f-6ec0ed730fc9
        username:
          description: Username of the user. The username field cannot be updated. This will be used only at the time of creation.
          type: string
          maxLength: 100
          example: joeroot
        type:
          description: |
            Type of the user.
            - LDAP - When a user is created via the LDAP protocol. It is not supported at the moment.
            - SSO - When a user is created using the SSO procedure. It is not supported at the moment.
            - SAGCLOUD - When the user is created for a SAG Cloud user.
            - LOCAL - When the user is created through the API Control Plane application.
          type: string
          readOnly: true
          enum:
            - LDAP
            - SSO
            - SAGCLOUD
            - LOCAL
          example: SSO
        firstname:
          description: First name of the user. The firstname field is mandatory at the time of User creation.
          type: string
          maxLength: 256
          example: Joe
        lastname:
          description: Last name of the user. The lastname field is mandatory at the time of User creation.
          type: string
          maxLength: 256
          example: Root
        password:
          description: |
            Password for the user.

            This will be in plain text. ***Not in Base64 Encoded / or any encryption used.***

            Get method should not list this field for security reasons.

            Put method will not update this field.
          type: string
          minLength: 8
          maxLength: 50
          writeOnly: true
          example: My@123Password
        email:
          description: Email of the user.
          type: string
          example: joe@sag.com
        preferredLocale:
          description: Preferred locale of the user.
          type: string
          example: en
        timeZone:
          description: Preferred timezone of the user.
          type: string
          example: Africa/Abidjan (GMT+0:00)
        timeFormat:
          description: Preferred time format of the user.
          type: string
          example: hh:mm:ss
        dateFormat:
          description: Preferred date format of the user.
          type: string
          example: dd/MM/yyyy
        groups:
          description: An array of the groups associated with the user. Groups cannot be passed at the time of User creation or update. Have to use PUT method of /user/{id}/groups API.
          readOnly: true
          type: array
          items:
            type: string
            format: uuid
          example:
            - 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
            - 200ceb26-807d-3bf9-9fd6-f4f0d1ca5444
        createdDate:
          description: Create date time of object
          type: string
          readOnly: true          
          example: 2021-03-24 08:15:23.345 IST
        modifiedDate:
          description: Modified date time of object
          type: string
          readOnly: true          
          example: 2021-03-24 09:15:23.345 IST
        cloudUser:
          description: A flag to indicate whether the current user is a cloud user.
          type: boolean
          readOnly: true
        systemUser:
          description: A system user refers to a default user account that is automatically created during API Control Plane installation.
          type: boolean
          readOnly: true
        dateTimeSetting:
          description: The dateTimeSetting payload comprises of three fields:timeZone, timeFormat and dateFormat.

    dateTimeSetting:
      type: object
      properties:
        timeZone:
          description: Preferred timezone of the user.
          type: string
          example: Africa/Abidjan (GMT+0:00)
        timeFormat:
          description: Preferred time format of the user.
          type: string
          example: hh:mm:ss
        dateFormat:
          description: Preferred date format of the user.
          type: string
          example: dd/MM/yyyy

    UserAudit:
      type: object
      properties:
        from:
          description: From date in epoch milliseconds timestamp.
          type: number
          example: 1700544745000
        to:
          description: To date in epoch milliseconds timestamp.
          type: number
          example: 1788548785000
        types:
          description: |
            Type of the audit log.
            - LOGIN_SUCCESSFUL - When a user login is successful in the API Control Plane application.
            - LOGIN_FAILED -  When a user login is unsuccessful/failed in the API Control Plane application
            - LOGIN_RENEWAL - When user login is renewal in the API Control Plane application
            - LOGOUT - When a user logout is successful in the API Control Plane application.
            - LOGOUT_FORCED - When a user is logout forcefully in the API Control Plane application
            - USER_CREATION - When a user create another user in the API Control Plane application.
            - USER_UPDATE - When a user update the user details in the API Control Plane application.
            - USER_DELETION - When a user is delted in the API Control Plane application.
            - USER_GROUP_UNASSIGNMENT - When a user is removed form the groups in the API Control Plane application.
            - USER_GROUP_ASSIGNMENT - When a user is added to the gropus in the API Control Plane application.
          type: array
          readOnly: true
          enum:
            - LOGIN_SUCCESSFUL
            - LOGIN_FAILED
            - LOGIN_RENEWAL
            - LOGOUT
            - LOGOUT_FORCED
            - USER_CREATION
            - USER_UPDATE
            - USER_DELETION
            - USER_GROUP_UNASSIGNMENT
            - USER_GROUP_ASSIGNMENT
          example: [LOGIN_SUCCESSFUL, USER_CREATION]

    UserAuditResponse:
      type: object
      properties:
        id:
          description: ID of the audit event.
          type: number
          example: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
        name:
          description: Name of the user.
          type: string
          example: administrator
        eAuditEventType:
          description: Describe the audit event.
          type: string
          example: LOGIN_SUCCESSFUL
        eventTimestamp:
          description:  Date in epoch milliseconds timestamp.
          type: number
          example: 1788548785000




    displaySetting:
      type: object
      properties:
        topList:
          description: Preferred value for number of top items.
          type: number
          example: 5
        ppDashboardWidgets:
          description: Map object for storing the platform provider widget name and its visibility status.
          type: object
          example:
            worldMap: true
            avgLatency: true
            runtimeUpward: true
            avgResponseTime: true
            health: true
            errorRate: true
            apiDownward: true
            capacity: true
            recentActivity: true
            problematicAssets: true
            performance: true
            noOfTransactions: true
            apiUpward: true
            runtimeDownward: true
            statistics: true
        pmDashboardWidgets:
          description: Map object for storing the product manager widget name and its visibility status.
          type: object
          example:
            recentActivity: true
            worldMap: true
            noOfTransactions: true
            apiLeast: true
            avgGatewayLatency: true
            avgResponseTime: true
            apiMost: true
            problematicAPIs: true
            apiDownward: true
            apiUpward: true
            statistics: true

        runtimeWidgets:
          description: Map object for storing the runtime monitoring widget name and its visibility status.
          type: object
          example:
            noOfTransactions: true
            responseTime: true
            latency: true
            problematicAPIs: true
            availability: true
            errorRate: true
            statusPerfCap: true

    thresholdSetting:
      type: object
      properties:
        runtimeTrend:
          type: object
          properties:
            upwardTrend:
              type: object
              properties:
                transactionCount:
                  type: number
                errorRate:
                  type: number
                responseTime:
                  type: number
                latency:
                  type: number
                unit:
                  type: string
                  enum:
                    - "%"
            downwardTrend:
              type: object
              properties:
                transactionCount:
                  type: number
                errorRate:
                  type: number
                responseTime:
                  type: number
                latency:
                  type: number
                unit:
                  type: string
                  enum:
                    - "%"
        apiTrend:
          type: object
          properties:
            upwardTrend:
              type: object
              properties:
                transactionCount:
                  type: number
                errorRate:
                  type: number
                responseTime:
                  type: number
                latency:
                  type: number
                unit:
                  type: string
                  enum:
                    - "%"
            downwardTrend:
              type: object
              properties:
                transactionCount:
                  type: number
                errorRate:
                  type: number
                responseTime:
                  type: number
                latency:
                  type: number
                unit:
                  type: string
                  enum:
                    - "%"
        dataPlanePerformance:
          type: object
          properties:
            latencyThreshold:
              type: object
              properties:
                acceptableLimit:
                  type: number
                warningLimit:
                  type: number
                errorLimit:
                  type: number
                unit:
                  type: string
                  enum:
                    - "ms"
            errorRateThreshold:
              type: object
              properties:
                acceptableLimit:
                  type: number
                warningLimit:
                  type: number
                errorLimit:
                  type: number
                unit:
                  type: string
                  enum:
                    - "ms"
        runtimePerformance:
          type: object
          properties:
            latencyThreshold:
              type: object
              properties:
                acceptableLimit:
                  type: number
                warningLimit:
                  type: number
                errorLimit:
                  type: number
                unit:
                  type: string
                  enum:
                    - "ms"

            errorRateThreshold:
              type: object
              properties:
                acceptableLimit:
                  type: number
                warningLimit:
                  type: number
                errorLimit:
                  type: number
                unit:
                  type: string
                  enum:
                    - "ms"

    dataplanePreferences:
      type: object
      properties:
        rowHeight:
          type: number
        itemsPerPage:
          type: number
        selectedColumns:
          type: array
          enum:
            - "icon"
            - "name"
            - "tags"
            - "noOfRuntimes"
            - "lastUpdated"
            - "owner"
            - "status"

    runtimePreferences:
      type: object
      properties:
        rowHeight:
          type: number
        itemsPerPage:
          type: number
        selectedColumns:
          type: array
          enum:
            - "icon"
            - "name"
            - "associatedDataplanes"
            - "tags"
            - "type"
            - "deploymentType"
            - "region"
            - "lastModifiedDate"

    runtimeAPIPreferences:
      type: object
      properties:
        rowHeight:
          type: number
        itemsPerPage:
          type: number
        selectedColumns:
          type: array
          enum:
            - "icon"
            - "apiType"
            - "displayVersion"
            - "description"
            - "tags"
            - "lastModifiedDate"
            - "apiStatus"
            - "isPublished"

    apiPreferences:
      type: object
      properties:
        rowHeight:
          type: number
        itemsPerPage:
          type: number
        selectedColumns:
          type: array
          enum:
            - "apiType"
            - "name"
            - "noOfRuntimes"
            - "noOfDifferences"
            - "status"
            - "isPublished"
        childSelectedColumns:
          type: array
          enum:
            - "runtimeName"
            - "name"
            - "displayVersion"
            - "description"
            - "noOfPolicies"
            - "status"
            - "isPublished"
            - "tags"
            - "lastModifiedDate"

    usersListingPreferences:
      type: object
      properties:
        rowHeight:
          type: number
        itemsPerPage:
          type: number
        selectedColumns:
          type: array
          enum:
            - "username"
            - "firstname"
            - "lastname"
            - "email"
            - "groups"

    Group:
      description: Group Information
      type: object
      properties:
        id:
          description: UUID of the group.
          readOnly: true                              
          type: string
          format: uuid
          example: 200ceb26-807d-3bf9-9fd6-f4f0d1ca54d4
        name:
          description: name of the Group.
          type: string
          example: API_PM
        description:
          description: description of the Group.
          type: string
          example: API Product Manager
        created:
          description: Create date time of object
          readOnly: true                        
          type: string
          example: 2021-03-24 08:15:23.345 IST
        modified:
          description: Modified date time of object
          readOnly: true                        
          type: string
          example: 2021-03-24 09:15:23.345 IST
    ErrorMessage:
      description: Common Error Response across all APIs
      required:
        - errorDetails
      type: object
      properties:
        errorDetails:
          type: array
          readOnly: true                        
          items:
            type: string
          example: This response indicates that the server encountered an error.
  responses:
    Unauthorized:
      description: This status code indicates that either the user did not provide valid user credentials or the user does not have privileges to perform the requested action.
    internal_server_error:
      description: Internal server error
      content:
        application/json:
          schema:
              $ref: "#/components/schemas/ErrorMessage"
          examples:
            Internal Server Error:
              description: Internal Server Error occurred.
              value:
                errorDetails:
                  - This response indicates that the server encountered an error.
  securitySchemes:
    basic_authentication:
      type: http
      description: This is the Basic Authentication mechanism where the credentials are sent in a Base64 encoded format of the form <username>:<password> in the Authorization header.
      scheme: basic
security:
- basic_authentication: []
